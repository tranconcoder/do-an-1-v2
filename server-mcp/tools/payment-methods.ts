import { z } from "zod";

export const paymentMethodsTool = {
    name: "payment",
    description: "Cung c·∫•p th√¥ng tin v·ªÅ c√°c ph∆∞∆°ng th·ª©c thanh to√°n ƒë∆∞·ª£c h·ªó tr·ª£ tr√™n Aliconcon",
    inputSchema: {
        method: z.enum(["cod", "vnpay"]).optional().describe("Ph∆∞∆°ng th·ª©c thanh to√°n c·ª• th·ªÉ: cod (thanh to√°n khi nh·∫≠n h√†ng), vnpay (VNPay)")
    },
    handler: async ({ method = "cod" }: { method?: "cod" | "vnpay" }) => {
        const paymentData = {
            introduction: {
                title: "C√°c ph∆∞∆°ng th·ª©c h·ªó tr·ª£ thanh to√°n",
                description: "Trong h·ªá th·ªëng mua s·∫Øm tr·ª±c tuy·∫øn hi·ªán nay, hai ph∆∞∆°ng th·ª©c thanh to√°n ph·ªï bi·∫øn ƒë∆∞·ª£c nhi·ªÅu kh√°ch h√†ng l·ª±a ch·ªçn l√† thanh to√°n khi nh·∫≠n h√†ng (COD) v√† thanh to√°n tr·ª±c tuy·∫øn qua VNPay.",
                note: "Ch√∫ng t√¥i h·ªó tr·ª£ c√°c ph∆∞∆°ng th·ª©c thanh to√°n sau ƒë·ªÉ mang l·∫°i s·ª± ti·ªán l·ª£i t·ªëi ƒëa cho kh√°ch h√†ng:"
            },
            primaryMethods: {
                "cod": {
                    name: "Thanh to√°n khi nh·∫≠n h√†ng (COD)",
                    description: "Kh√°ch h√†ng c√≥ th·ªÉ ƒë·∫∑t h√†ng m√† kh√¥ng c·∫ßn thanh to√°n tr∆∞·ªõc, ch·ªâ thanh to√°n tr·ª±c ti·∫øp cho nh√¢n vi√™n giao h√†ng khi nh·∫≠n ƒë∆∞·ª£c s·∫£n ph·∫©m",
                    icon: "üíµ",
                    benefits: [
                        "T·∫°o c·∫£m gi√°c an t√¢m v√† tin t∆∞·ªüng khi mua s·∫Øm",
                        "Kh√¥ng c·∫ßn thanh to√°n tr∆∞·ªõc",
                        "Ki·ªÉm tra h√†ng tr∆∞·ªõc khi tr·∫£ ti·ªÅn",
                        "Ph√π h·ª£p v·ªõi m·ªçi ƒë·ªëi t∆∞·ª£ng kh√°ch h√†ng",
                        "Kh√¥ng c·∫ßn t√†i kho·∫£n ng√¢n h√†ng hay th·∫ª t√≠n d·ª•ng"
                    ],
                    process: [
                        "ƒê·∫∑t h√†ng tr√™n website v√† ch·ªçn ph∆∞∆°ng th·ª©c COD",
                        "Nh·∫≠n x√°c nh·∫≠n ƒë∆°n h√†ng qua email/SMS",
                        "Nh√¢n vi√™n giao h√†ng li√™n h·ªá x√°c nh·∫≠n th·ªùi gian giao",
                        "Ki·ªÉm tra s·∫£n ph·∫©m khi nh·∫≠n h√†ng",
                        "Thanh to√°n ti·ªÅn m·∫∑t tr·ª±c ti·∫øp cho nh√¢n vi√™n giao h√†ng"
                    ],
                    conditions: [
                        "Ch·ªâ nh·∫≠n ti·ªÅn m·∫∑t, kh√¥ng nh·∫≠n chuy·ªÉn kho·∫£n t·∫°i ch·ªó"
                    ],
                    customerTips: [
                        "Chu·∫©n b·ªã ƒë·ªß ti·ªÅn m·∫∑t theo ƒë√∫ng s·ªë ti·ªÅn ƒë∆°n h√†ng",
                        "Ki·ªÉm tra k·ªπ s·∫£n ph·∫©m v·ªÅ ch·∫•t l∆∞·ª£ng v√† s·ªë l∆∞·ª£ng",
                        "Gi·ªØ h√≥a ƒë∆°n v√† phi·∫øu giao h√†ng ƒë·ªÉ b·∫£o h√†nh",
                        "Li√™n h·ªá hotline ngay n·∫øu c√≥ v·∫•n ƒë·ªÅ v·ªõi s·∫£n ph·∫©m"
                    ]
                },
                "vnpay": {
                    name: "Thanh to√°n tr·ª±c tuy·∫øn qua VNPay",
                    description: "VNPay l√† m·ªôt c·ªïng thanh to√°n ƒëi·ªán t·ª≠ hi·ªán ƒë·∫°i, cho ph√©p ng∆∞·ªùi d√πng thanh to√°n nhanh ch√≥ng v√† an to√†n th√¥ng qua c√°c t√†i kho·∫£n ng√¢n h√†ng, th·∫ª ATM, ho·∫∑c v√≠ ƒëi·ªán t·ª≠",
                    icon: "üü†",
                    advantages: [
                        "Ti·∫øt ki·ªám th·ªùi gian thanh to√°n",
                        "H·ªó tr·ª£ x·ª≠ l√Ω ƒë∆°n h√†ng t·ª± ƒë·ªông",
                        "Ph√π h·ª£p v·ªõi xu h∆∞·ªõng thanh to√°n kh√¥ng ti·ªÅn m·∫∑t hi·ªán nay",
                        "B·∫£o m·∫≠t cao v·ªõi c√¥ng ngh·ªá m√£ h√≥a ti√™n ti·∫øn",
                        "H·ªó tr·ª£ nhi·ªÅu ph∆∞∆°ng th·ª©c thanh to√°n trong m·ªôt n·ªÅn t·∫£ng"
                    ],
                    supportedMethods: [
                        {
                            type: "V√≠ ƒëi·ªán t·ª≠ VNPay",
                            description: "S·ª≠ d·ª•ng s·ªë d∆∞ trong v√≠ VNPay",
                            features: ["N·∫°p ti·ªÅn d·ªÖ d√†ng", "Qu·∫£n l√Ω chi ti√™u", "∆Øu ƒë√£i ƒë·ªôc quy·ªÅn"]
                        }
                    ],
                    process: [
                        "Ch·ªçn s·∫£n ph·∫©m v√† th√™m v√†o gi·ªè h√†ng",
                        "T·∫°i trang thanh to√°n, ch·ªçn 'VNPay'",
                        "Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n (ng√¢n h√†ng/th·∫ª ATM/v√≠ VNPay)",
                        "Nh·∫≠p th√¥ng tin thanh to√°n v√† x√°c th·ª±c OTP",
                        "Nh·∫≠n x√°c nh·∫≠n giao d·ªãch th√†nh c√¥ng",
                        "ƒê∆°n h√†ng ƒë∆∞·ª£c x·ª≠ l√Ω t·ª± ƒë·ªông"
                    ],
                    security: [
                        "M√£ h√≥a SSL 256-bit b·∫£o v·ªá th√¥ng tin",
                        "X√°c th·ª±c ƒëa l·ªõp v·ªõi OTP",
                        "Gi√°m s√°t giao d·ªãch 24/7",
                        "Tu√¢n th·ªß ti√™u chu·∫©n b·∫£o m·∫≠t qu·ªëc t·∫ø PCI DSS"
                    ],
                    benefits: [
                        "Giao d·ªãch t·ª©c th·ªùi, x·ª≠ l√Ω ƒë∆°n h√†ng nhanh ch√≥ng",
                        "Kh√¥ng c·∫ßn mang ti·ªÅn m·∫∑t",
                        "L·ªãch s·ª≠ giao d·ªãch minh b·∫°ch",
                        "H·ªó tr·ª£ ho√†n ti·ªÅn t·ª± ƒë·ªông khi c·∫ßn thi·∫øt",
                        "T√≠ch h·ª£p v·ªõi h·ªá th·ªëng loyalty program"
                    ]
                }
            },
            comparison: {
                title: "So s√°nh COD vs VNPay",
                factors: [
                    {
                        factor: "ƒê·ªô tin c·∫≠y",
                        cod: "Cao - Ki·ªÉm tra h√†ng tr∆∞·ªõc khi tr·∫£ ti·ªÅn",
                        vnpay: "Cao - B·∫£o m·∫≠t c√¥ng ngh·ªá hi·ªán ƒë·∫°i"
                    },
                    {
                        factor: "T·ªëc ƒë·ªô x·ª≠ l√Ω",
                        cod: "Ch·∫≠m - C·∫ßn ch·ªù giao h√†ng",
                        vnpay: "Nhanh - X·ª≠ l√Ω t·ª©c th·ªùi"
                    },
                    {
                        factor: "Ti·ªán l·ª£i",
                        cod: "Trung b√¨nh - C·∫ßn c√≥ m·∫∑t nh·∫≠n h√†ng",
                        vnpay: "Cao - Thanh to√°n m·ªçi l√∫c m·ªçi n∆°i"
                    },
                    {
                        factor: "Ph√≠ d·ªãch v·ª•",
                        cod: "15.000ƒë (ƒë∆°n < 500k), mi·ªÖn ph√≠ (ƒë∆°n ‚â• 500k)",
                        vnpay: "Mi·ªÖn ph√≠ cho kh√°ch h√†ng"
                    }
                ]
            },
            recommendations: {
                title: "G·ª£i √Ω l·ª±a ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n",
                scenarios: [
                    {
                        situation: "L·∫ßn ƒë·∫ßu mua h√†ng online",
                        recommendation: "COD",
                        reason: "An t√¢m ki·ªÉm tra h√†ng tr∆∞·ªõc khi thanh to√°n"
                    },
                    {
                        situation: "Mua h√†ng th∆∞·ªùng xuy√™n",
                        recommendation: "VNPay",
                        reason: "Ti·∫øt ki·ªám th·ªùi gian v√† ti·ªán l·ª£i"
                    },
                    {
                        situation: "ƒê∆°n h√†ng gi√° tr·ªã cao",
                        recommendation: "VNPay",
                        reason: "B·∫£o m·∫≠t cao v√† c√≥ th·ªÉ ho√†n ti·ªÅn"
                    },
                    {
                        situation: "C·∫ßn giao h√†ng g·∫•p",
                        recommendation: "VNPay",
                        reason: "X·ª≠ l√Ω ƒë∆°n h√†ng t·ª± ƒë·ªông, giao h√†ng nhanh h∆°n"
                    }
                ]
            },
            callToAction: {
                message: "B·∫°n mu·ªën thanh to√°n b·∫±ng ph∆∞∆°ng th·ª©c n√†o? Ch·ªçn ngay ƒë·ªÉ nh·∫≠n h∆∞·ªõng d·∫´n chi ti·∫øt nh√©!",
                supportContact: {
                    hotline: "1900-1234",
                    email: "support@aliconcon.com",
                    chat: "Chat tr·ª±c ti·∫øp tr√™n website",
                    hours: "H·ªó tr·ª£ 24/7"
                }
            },
        };

        let responseData: any = {};

        switch (method) {
            case "cod":
                responseData = {
                    method: "cod",
                    data: {
                        introduction: paymentData.introduction,
                        method: paymentData.primaryMethods.cod,
                        recommendations: paymentData.recommendations,
                        callToAction: paymentData.callToAction
                    }
                };
                break;
            case "vnpay":
                responseData = {
                    method: "vnpay",
                    data: {
                        introduction: paymentData.introduction,
                        method: paymentData.primaryMethods.vnpay,
                        recommendations: paymentData.recommendations,
                        callToAction: paymentData.callToAction
                    }
                };
                break;
            default:
                responseData = {
                    method: "cod",
                    data: paymentData
                };
                break;
        }

        return {
            content: [
                {
                    type: "text" as const,
                    text: JSON.stringify(responseData, null, 2)
                }
            ]
        };
    }
}; 